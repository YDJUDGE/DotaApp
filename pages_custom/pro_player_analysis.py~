import streamlit as st
from pro_players.main_functions import analyze_pro_player
from fpdf import FPDF
import os
import asyncio

def generate_pdf_summary(result):
    pdf = FPDF()
    pdf.add_page()

    font_path_regular = os.path.join("assets", "fonts", "DejaVuSans.ttf")
    font_path_bold = os.path.join("assets", "fonts", "DejaVuSans-Bold.ttf")

    pdf.add_font("DejaVu", "", font_path_regular, uni=True)
    pdf.add_font("DejaVu", "B", font_path_bold, uni=True)

    pdf.set_font("DejaVu", size=18)
    pdf.set_text_color(30, 30, 30)
    pdf.cell(0, 10, txt="–†–µ–∑—é–º–µ –ø—Ä–æ –∏–≥—Ä–æ–∫–∞ Dota 2", ln=True, align="C")
    pdf.ln(8)

    pdf.set_font("DejaVu", "B", 12)
    pdf.set_text_color(0, 0, 0)

    data = [
        ("Steam ID", result["account_id"]),
        ("–ù–∏–∫", result["nickname"]),
        ("–ö–æ–º–∞–Ω–¥–∞", result["team_name"]),
        ("Skill Score", f"{result['skill_score']:.2f}"),
        ("–ó–≤–∞–Ω–∏–µ", result["rank_name"]),
        ("MMR", result["mmr_text"]),
        ("–†–æ–ª–∏", ', '.join(result["roles"]) if result["roles"] else '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'),
        ("–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–æ–ª–∏", result["role_modifier"]),
        ("–ë–æ–Ω—É—Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç–∏", result["versatility_bonus"]),
        ("–¢–∏–ø –∏–≥—Ä–æ–∫–∞", result["player_class"]),
        ("–¢—Ä–∞–Ω—Å—Ñ–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å", f"${result['transfer_price']:,.2f}"),
        ("–ú–µ—Å—è—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞", f"${result['salary']:,.2f}"),
    ]

    label_width = 70
    value_width = 100
    line_height = 10

    for label, value in data:
        if isinstance(value, str) and value.startswith("$"):
            value = value.replace("$", "$ ")

        pdf.set_font("DejaVu", "B", 12)
        pdf.cell(label_width, line_height, txt=label + ":", border=0)  # –ò—Å–ø—Ä–∞–≤–∏–ª–∏ txtraw –Ω–∞ txt

        pdf.set_font("DejaVu", "", 12)
        pdf.cell(value_width, line_height, txt=str(value), border=0, ln=1)

        x_left = pdf.l_margin
        x_right = pdf.w - pdf.r_margin
        y = pdf.get_y()
        pdf.set_draw_color(220, 220, 220)
        pdf.line(x_left, y, x_right, y)
        pdf.set_draw_color(0, 0, 0)

    pdf.ln(6)
    pdf.set_font("DejaVu", "", 10)
    pdf.set_text_color(150, 150, 150)
    pdf.cell(0, 10, txt="–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏", ln=1, align="R")

    return bytes(pdf.output(dest="S"))

def pro_player_analysis_page():
    st.title("üåü –ê–Ω–∞–ª–∏–∑ –ü–†–û-–∏–≥—Ä–æ–∫–∞ Dota 2")
    st.warning("‚ö†Ô∏è –≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ **–ø—Ä–æ-–∏–≥—Ä–æ–∫–æ–≤**. "
               "–î–ª—è –æ–±—ã—á–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ä–∞–∑–¥–µ–ª.")

    account_id = st.text_input("–í–≤–µ–¥–∏—Ç–µ Steam ID (—á–∏—Å–ª–æ):")
    run = st.button("üîç –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å")

    if run and account_id:
        try:
            account_id_int = int(account_id)
        except ValueError:
            st.error("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π Steam ID")
            return

        with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–∞..."):
            result, error = asyncio.run(analyze_pro_player(account_id_int))

        if error:
            st.error(error)
            return

        st.markdown(f"""
        ## üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ-–∏–≥—Ä–æ–∫–∞ (Steam ID: {result['account_id']})

        - **Skill Score:** {result['skill_score']}
        - **–ù–∏–∫:** {result['nickname']}
        - **–ó–≤–∞–Ω–∏–µ:** {result['rank_name']}
        - **MMR:** {result['mmr_text']}
        - **–ö–æ–º–∞–Ω–¥–∞:** {result['team_name']}
        - **–†–æ–ª–∏ (–∏–≥—Ä–∞–µ—Ç):** {', '.join(result['roles']) if result['roles'] else '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}
        - **–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–æ–ª–∏:** {result['role_modifier']}
        - **–ë–æ–Ω—É—Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç–∏:** {result['versatility_bonus']}
        - **–¢–∏–ø –∏–≥—Ä–æ–∫–∞:** {result['player_class']}
        - **–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:** ${result['transfer_price']:,.2f}
        - **–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è –º–µ—Å—è—á–Ω–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞:** ${result['salary']:,.2f}
        """)

        st.markdown("### üèÜ –¢–æ–ø-5 —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –≥–µ—Ä–æ–µ–≤:")

        for i, hero in enumerate(result["top_heroes"], 1):
            hero_name = hero["hero_name"]
            count = hero["count"]
            winrate = hero["winrate"]

            with st.container():
                col1, col2, col3 = st.columns([1, 3, 2])
                col1.markdown(f"**{i}.**")
                col2.markdown(f"üßô **{hero_name}**")
                col3.markdown(f"üéÆ **–ú–∞—Ç—á–µ–π:** {count}  \nüíØ **WR:** {winrate:.1f}%")
                st.markdown("---")

        st.info("üìå –ê–Ω–∞–ª–∏–∑ –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 100 –º–∞—Ç—á–∞—Ö.")  # –û–±–Ω–æ–≤–∏–ª–∏ –ø–æ–¥ match_limit=100
        st.info(
            "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π API –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≤ –≤—ã–±–æ—Ä–∫—É –º–æ–≥—É—Ç –ø–æ–ø–∞—Å—Ç—å –Ω–µ –≤—Å–µ –º–∞—Ç—á–∏ –∏–≥—Ä–æ–∫–∞, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ ‚Äî –ø—Ä–∏–±–ª–∏–∂—ë–Ω–Ω—ã–µ.")

        pdf_bytes = generate_pdf_summary(result)
        st.download_button(
            label="üì• –°–∫–∞—á–∞—Ç—å PDF-—Ä–µ–∑—é–º–µ",
            data=pdf_bytes,
            file_name=f"pro_player_{result['account_id']}_summary.pdf",
            mime="application/pdf"
        )