import streamlit as st
from heroes.main_functions import calculate_kda, format_duration
from matches.main_function import fetch_match_by_id
from matches.main_functions import format_items
from matches.main_functions import get_hero_by_id
from heroes.special_functions import get_contribution_label


def match_details_page():
    st.title("üß© –ê–Ω–∞–ª–∏–∑ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –º–∞—Ç—á–∞ –≤ Dota 2")

    with st.sidebar:
        match_id = st.number_input("–í–≤–µ–¥–∏—Ç–µ Match ID", min_value=1)
        run = st.button("üîç –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å")

    if run:
        match_data = fetch_match_by_id(match_id)

        if not match_data:
            st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ –º–∞—Ç—á—É")
            return

        st.session_state['match'] = match_data

    if "match" in st.session_state:
        match_data = st.session_state['match']
        st.subheader("üßæ –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ç—á–µ")

        match_data = st.session_state["match"]
        duration = format_duration(match_data.get("duration"))
        radiant_win = match_data.get("radiant_win")
        radiant_score = match_data.get("radiant_score")
        dire_score = match_data.get("dire_score")
        first_blood = format_duration(match_data.get("first_blood_time"))
        result = "–°–∏–ª—ã –°–≤–µ—Ç–∞ ‚úÖ" if radiant_win else "–°–∏–ª—ã –¢—å–º—ã ‚úÖ"

        st.markdown(f"""
        - **–ü–æ–±–µ–¥–∏—Ç–µ–ª—å**: {result}
        - **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å**: '{duration}'
        - **–°—á—ë—Ç(–°–∏–ª—ã –°–≤–µ—Ç–∞:–°–∏–ª—ã –¢—å–º—ã)**: {radiant_score} : {dire_score}
        - **–ü–µ—Ä–≤–∞—è –ö—Ä–æ–≤—å**: {first_blood}
        ---
        """)

        st.subheader("üßë –ò–≥—Ä–æ–∫–∏")

        players = match_data.get("players", [])

        for player in players:
            name = player.get('personaname', '–ê–Ω–æ–Ω–∏–º')
            is_radiant = player.get("isRadiant")
            team = "–°–∏–ª—ã –°–≤–µ—Ç–∞" if is_radiant else "–°–∏–ª—ã –¢—å–º—ã"

            k, d, a = player.get('kills', 0), player.get('deaths', 0), player.get('assists', 0)
            kda = calculate_kda(k, d, a)
            items = format_items([
                player.get("item_0"), player.get("item_1"), player.get("item_2"),
                player.get("item_3"), player.get("item_4"), player.get("item_5"),
            ])

            st.markdown(f"""
            #### üéÆ {name} ({team})
            - **–ì–µ—Ä–æ–π**: {get_hero_by_id(player.get("hero_id"))}
            - **–£–±–∏–π—Å—Ç–≤–∞ / –°–º–µ—Ä—Ç–∏ / –ü–æ–º–æ—â–∏**: `{k}/{d}/{a}`  
            - **KDA**: **{kda:.2f}**  
            - **GPM / XPM**: `{player.get("gold_per_min")}` / `{player.get("xp_per_min")}`
            - **–õ–∞—Å—Ç—Ö–∏—Ç—ã / –î–µ–Ω–∞–π**: `{player.get("last_hits")}` / `{player.get("denies")}`  
            - **–£—Ä–æ–Ω –ø–æ –≥–µ—Ä–æ—è–º / –ø–æ –±–∞—à–Ω—è–º / –ª–µ—á–µ–Ω–∏–µ**: `{player.get("hero_damage")}` / `{player.get("tower_damage")}` / `{player.get("hero_healing")}`  
            - **–ü—Ä–µ–¥–º–µ—Ç—ã**: {", ".join(items)}
            - **–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞**: {get_contribution_label(k, d, a)}
            ---
            """)
